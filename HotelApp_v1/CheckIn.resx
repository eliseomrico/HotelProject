<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>